def node_require(script)
  # Resolve script with node to allow for hoisting
  require Pod::Executable.execute_command('node', [
    '-p',
    "require.resolve('#{script}', { paths: ['#{__dir__}'] })"
  ]).strip
end


# Require react-native's and react-native-permissions' scripts
node_require('react-native/scripts/react_native_pods.rb')
node_require('react-native-permissions/scripts/setup.rb')

platform :ios, min_ios_version_supported
prepare_react_native_project!

# Setup permissions
setup_permissions([
  # 'AppTrackingTransparency',
  # 'Bluetooth',
  # 'Calendars',
  # 'CalendarsWriteOnly',
  'Camera',
  # 'Contacts',
  # 'FaceID',
  # 'LocationAccuracy',
  # 'LocationAlways',
  # 'LocationWhenInUse',
  # 'MediaLibrary',
  # 'Microphone',
  # 'Motion',
  # 'Notifications',
  'PhotoLibrary',
  'PhotoLibraryAddOnly',
  # 'Reminders',
  # 'Siri',
  # 'SpeechRecognition',
  # 'StoreKit',
])
# Handle use_frameworks dynamically
linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
else
  # âœ… Needed for Swift AppDelegate + Firebase
  use_frameworks! :linkage => :static
end

target 'HelloDoc' do
  config = use_native_modules!

  $RNFirebaseAsStaticFramework = true

  use_react_native!(
    :path => config[:reactNativePath],
    :app_path => "#{Pod::Config.instance.installation_root}/..",
    :hermes_enabled => false
  )
end

post_install do |installer|
  react_native_post_install(
    installer,
    "../node_modules/react-native", # âœ… explicitly pass reactNativePath
    :mac_catalyst_enabled => false
  )
end
